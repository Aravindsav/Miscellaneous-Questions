class Solution {
    public int findTargetSumWays(int[] nums, int target) {
        
        //the idea is to identify this problem which is similar to count the number of subsets with teh diff = target;
        int sum=0;
        for(int num : nums){
            sum+=num;
        }
        //now find the sum required 
        if(sum<target || (sum+target)%2!=0){
            return 0;
        }

        sum = (sum+target)/2;
        if(sum<0){
            return 0;
        }

        int dp[][] = new int[nums.length+1][sum+1];
       dp[0][0]=1;
        for(int i = 1;i<nums.length+1;i++){
            for(int j =0;j<sum+1;j++){
                if(nums[i-1]<=j){
                    dp[i][j]=dp[i-1][j-nums[i-1]]+dp[i-1][j];
                }
                else{
                    dp[i][j]=dp[i-1][j];
                }
            }
        }

    return dp[nums.length][sum];
    
    }
}
