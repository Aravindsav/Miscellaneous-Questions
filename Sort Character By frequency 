class Solution {

public class Pair implements Comparable<Pair>{
    int freq;
    char ch ;
    Pair(char ch,int freq){
        this.freq = freq;
        this.ch =ch;
    }
    public int compareTo(Pair pair){
        return pair.freq-this.freq;
    }
}


    public String frequencySort(String s) {

        HashMap<Character,Integer> map = new HashMap<>();
        for(int i =0;i<s.length();i++){
            char ch = s.charAt(i);
            map.put(ch,map.getOrDefault(ch,0)+1);
        }
        PriorityQueue<Pair> pq = new PriorityQueue<>();
        for(Character key:map.keySet()){
            pq.add(new Pair(key,map.get(key)));
        }
        StringBuilder sb = new StringBuilder("");
        while(!pq.isEmpty()){
            Pair pair = pq.remove();
            int freq = pair.freq;
            char ch = pair.ch;
            int i=0;
            while(i<freq){
sb.append(ch);
                i++;
            }
        }
        return sb.toString();
    }
}